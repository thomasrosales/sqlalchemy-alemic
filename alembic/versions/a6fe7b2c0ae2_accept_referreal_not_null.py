"""accept referreal not null

Revision ID: a6fe7b2c0ae2
Revises: f2348755c991
Create Date: 2024-05-19 18:26:08.393894

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "a6fe7b2c0ae2"
down_revision: Union[str, None] = "f2348755c991"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "address", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "orders", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "products", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=True
    )
    op.alter_column(
        "user_account",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=True,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "user_account",
        "updated_at",
        existing_type=postgresql.TIMESTAMP(),
        nullable=False,
    )
    op.alter_column(
        "products", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "orders", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    op.alter_column(
        "address", "updated_at", existing_type=postgresql.TIMESTAMP(), nullable=False
    )
    # ### end Alembic commands ###
